// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 用户表
model User {
  id            String       @id @default(cuid())
  name          String
  email         String       @unique
  password      String       // 加密存储
  organizationId String?     // 保留向后兼容
  organization  Organization? @relation("PrimaryOrganization", fields: [organizationId], references: [id])
  organizations UserOrganization[] // 多机构关联
  role          Role         @default(REPORTER)
  active        Boolean      @default(true)  // 用户状态，true为启用，false为禁用
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@index([organizationId])
  @@index([role])
  @@index([email])
}

// 角色枚举
enum Role {
  ADMIN
  REPORTER
  FINANCE
  AUDITOR
  OBSERVER
}

// 机构表
model Organization {
  id          String       @id @default(cuid())
  name        String
  code        String       @unique
  departments Department[]
  users       User[]       @relation("PrimaryOrganization")
  userOrganizations UserOrganization[] // 多用户关联
  projects    Project[]    @relation("PrimaryOrganization")
  projectOrganizations Project[] @relation("ProjectOrganizations") // 关联项目
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([name])
  @@index([code])
}

// 部门表
model Department {
  id             String       @id @default(cuid())
  name           String
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  projects       Project[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([organizationId])
  @@index([name])
}

// 项目状态枚举
enum ProjectStatus {
  ACTIVE
  ARCHIVED
}

// 项目表
model Project {
  id            String         @id @default(cuid())
  name          String
  code          String?        // 项目编码，可选字段
  status        ProjectStatus  @default(ACTIVE)
  startYear     Int
  hasRecords    Boolean       @default(false)  // 是否有关联记录
  organizationId String        // 主要所属机构
  organization   Organization  @relation("PrimaryOrganization", fields: [organizationId], references: [id])
  organizations Organization[] @relation("ProjectOrganizations") // 关联机构
  departments   Department[]
  subProjects   SubProject[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@unique([name, organizationId], name: "projectNameOrg")
  @@index([name])
  @@index([code])
  @@index([status])
  @@index([startYear])
  @@index([organizationId])
}

// 子项目表
model SubProject {
  id          String      @id @default(cuid())
  name        String
  projectId   String
  project     Project     @relation(fields: [projectId], references: [id])
  fundTypes   FundType[]
  records     Record[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([projectId])
  @@index([name])
}

// 资金需求类型表
model FundType {
  id          String       @id @default(cuid())
  name        String
  subProjects SubProject[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([name])
}

// 记录表
model Record {
  id            String     @id @default(cuid())
  subProjectId  String
  subProject    SubProject @relation(fields: [subProjectId], references: [id])
  year          Int
  month         Int
  predicted     Float?     // 预测金额
  actualUser    Float?     // 填报人实际金额
  actualFinance Float?     // 财务实际金额
  auditResult   Float?     // 审核结果
  status        String     // draft/submitted/approved
  submittedBy   String     // 提交人ID
  submittedAt   DateTime?
  remark        String?    // 备注信息
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@unique([subProjectId, year, month])
  @@index([subProjectId])
  @@index([year])
  @@index([month])
  @@index([status])
  @@index([submittedBy])
  @@index([submittedAt])
}

// 审计日志表
model AuditLog {
  id          String    @id @default(cuid())
  userId      String
  action      String
  resource    String
  resourceId  String?
  permissions String?   // JSON string
  result      Boolean
  error       String?
  duration    Int?      // 毫秒
  timestamp   DateTime
  createdAt   DateTime  @default(now())

  @@index([userId])
  @@index([action])
  @@index([resource])
  @@index([timestamp])
}

// 用户-机构多对多关联表
model UserOrganization {
  id             String       @id @default(cuid())
  userId         String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())

  @@unique([userId, organizationId])
  @@index([userId])
  @@index([organizationId])
}
